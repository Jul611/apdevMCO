{{>studentNav}}

<h1>Book a Workspace</h1>

<form id="reservationForm">
    <div class="datetimelab-fb">
        <div class="date">
            <label for="date">Date:</label>
            <input type="date" id="date">
        </div>

        <div class="time">
            <label for="timeFromDropdown">Time:</label>
            <select id="time">
                <option value="7:00AM - 8:00AM">7:00AM - 8:00AM</option>
                <option value="7:30AM - 8:30AM">7:30AM - 8:30AM</option>
                <option value="8:00AM - 9:00AM">8:00AM - 9:00AM</option>
                <option value="8:30AM - 9:30AM">8:30AM - 9:30AM</option>
                <option value="9:00AM - 10:00AM">9:00AM - 10:00AM</option>
                <option value="9:30AM - 10:30AM">9:30AM - 10:30AM</option>
                <option value="10:00AM - 11:00AM">10:00AM - 11:00AM</option>
                <option value="10:30AM - 11:30AM">10:30AM - 11:30AM</option>
                <option value="11:00AM - 12:00PM">11:00AM - 12:00PM</option>
                <option value="11:30AM - 12:30PM">11:30AM - 12:30PM</option>
                <option value="12:00PM - 1:00PM">12:00PM - 1:00PM</option>
                <option value="12:30PM - 1:30PM">12:30PM - 1:30PM</option>
                <option value="1:00PM - 2:00PM">1:00PM - 2:00PM</option>
                <option value="1:30PM - 2:30PM">1:30PM - 2:30PM</option>
                <option value="2:00PM - 3:00PM">2:00PM - 3:00PM</option>
                <option value="2:30PM - 3:30PM">2:30PM - 3:30PM</option>
                <option value="3:00PM - 4:00PM">3:00PM - 4:00PM</option>
                <option value="3:30PM - 4:30PM">3:30PM - 4:30PM</option>
                <option value="4:00PM - 5:00PM">4:00PM - 5:00PM</option>
                <option value="4:30PM - 5:30PM">4:30PM - 5:30PM</option>
                <option value="5:00PM - 6:00PM">5:00PM - 6:00PM</option>
                <option value="5:30PM - 6:30PM">5:30PM - 6:30PM</option>
                <option value="6:00PM - 7:00PM">6:00PM - 7:00PM</option>
                <option value="6:30PM - 7:30PM">6:30PM - 7:30PM</option>
                <option value="7:00PM - 8:00PM">7:00PM - 8:00PM</option>
                <option value="7:30PM - 8:30PM">7:30PM - 8:30PM</option>
                <option value="8:00PM - 9:00PM">8:00PM - 9:00PM</option>
                <option value="8:30PM - 9:30PM">8:30PM - 9:30PM</option>
                <option value="9:00PM - 10:00PM">9:00PM - 10:00PM</option>
            </select>
        </div>

        <div class="dropdown">
            <label for="labNum">Lab Number:</label>
            <select id="labNum">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
            </select>
        </div>
    </div>

    <div class="mainbox-fb">
        <h2>Select Seats to Reserve</h2>
        <div class="seats-grid">
            <button type="button" class="seat" id="seat1" data-seat="1">1</button>
            <button type="button" class="seat" id="seat2" data-seat="2">2</button>
            <button type="button" class="seat" id="seat3" data-seat="3">3</button>
            <button type="button" class="seat" id="seat4" data-seat="4">4</button>
            <button type="button" class="seat" id="seat5" data-seat="5">5</button>
            <button type="button" class="seat" id="seat6" data-seat="6">6</button>
            <button type="button" class="seat" id="seat7" data-seat="7">7</button>
            <button type="button" class="seat" id="seat8" data-seat="8">8</button>
            <button type="button" class="seat" id="seat9" data-seat="9">9</button>
            <button type="button" class="seat" id="seat10" data-seat="10">10</button>
        </div>

        <label><input type="checkbox" id="anonCheckbox">Anonymous Reservation</label><br>
    </div>

    <button class="submit" id="submitReservation">Submit Reservation</button>
</form>

<script>
    function formatDateForDatabase(inputDate) {
        const parts = inputDate.split('-');
        return `${parts[0]}-${parts[1]}-${parts[2]}`; // Adjust format if needed
    }

    document.addEventListener('DOMContentLoaded', () => {
        const dateInput = document.getElementById('date');
        const timeInput = document.getElementById('time');
        const labNumInput = document.getElementById('labNum');

        async function fetchReservations() {
            const date = formatDateForDatabase(dateInput.value);
            const time = timeInput.value;
            const labNum = labNumInput.value;

            console.log('Fetching reservations with:', { date, time, labNum }); // Debug log

            if (!date || !time || !labNum) {
                return;
            }

            try {
                // Loop through each seat number and fetch its reservation status
                for (let seatNum = 1; seatNum <= 10; seatNum++) {
                    const response = await fetch(`/reservations?date=${date}&time=${time}&labNum=${labNum}&seatNum=${seatNum}`);
                    const reservations = await response.json();
                    console.log(`Reservations for seat ${seatNum}:`, reservations); // Debug log

                    const seatElement = document.querySelector(`.seat[data-seat="${seatNum}"]`);
                    if (reservations.length > 0) {
                        seatElement.classList.add('taken');
                        seatElement.disabled = true;

                        
                    }
                }
            } catch (error) {
                console.error('Error fetching reservations:', error);
            }
        }

        dateInput.addEventListener('change', fetchReservations);
        timeInput.addEventListener('change', fetchReservations);
        labNumInput.addEventListener('change', fetchReservations);

        // Add event listeners for seat selection
        document.querySelectorAll('.seat').forEach(seat => {
            seat.addEventListener('click', () => {
                seat.classList.toggle('selected');
            });
        });
    });

    // Event listener for reservation submission
    document.getElementById('submitReservation').addEventListener('click', async (event) => {
        event.preventDefault();

        const date = document.getElementById('date').value;
        const time = document.getElementById('time').value;
        const labNum = document.getElementById('labNum').value;
        const seatElements = document.querySelectorAll('.seat.selected');
        const seatNums = Array.from(seatElements).map(seat => seat.dataset.seat);
        const isAnon = document.getElementById('anonCheckbox').checked;

        if (!date || !time || !labNum || seatNums.length === 0) {
            alert('Please fill in all fields and select at least one seat.');
            return;
        }

        try {
            const results = [];
            for (const seatNum of seatNums) {
                const requestData = { date, time, labNum, seatNum, isAnon };
                console.log('Sending request data:', requestData);

                const response = await fetch('/reserve', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(requestData)
                });

                const result = await response.json();
                results.push(result);
            }

            // Process results as needed
            results.forEach(result => {
                if (result.success) {
                    console.log('Reservation successful:', result.message);
                } else {
                    console.error('Reservation failed:', result.error);
                }
            });

            alert('All reservations submitted successfully.');
            location.reload();

        } catch (error) {
            console.error('Error:', error);
            alert('Failed to submit reservations.');
        }
    });
</script>
